version: 2.1

setup: true

orbs:
  path-filtering: circleci/path-filtering@0.0.2
  continuation: circleci/continuation@0.1.2
  circleci-cli: circleci/circleci-cli@0.1.9

executors:
  base:
    docker:
      - image: cimg/base:stable

jobs:
  run_some_checks:
    executor: base
    steps:
      - checkout

  prepare_for_next:
    executor: path-filtering/default
    steps:
      - checkout
      - circleci-cli/install
      - path-filtering/set-parameters:
          base-revision: << pipeline.git.base_revision >>
          mapping: |
            front/.* build-front true
            back/.* build-back true
      - run: cat /tmp/pipeline-parameters.json
      - run:
          name: Install jq
          command: |
            if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi
            $SUDO apt-get update && $SUDO apt-get install -y jq
      - run: 
          # to-do.. get these variables to bash_env
          name: Run conditionals 
          command: |
            front_check=`cat /tmp/pipeline-parameters.json | jq -r '."build-front"'`
            back_check=`cat /tmp/pipeline-parameters.json | jq -r '."build-back"'`

            if [ "$front_check" = "true" ]; then
              echo "front changed"
              export DIRECTORY_CHOICE=secondary
            else
              echo "not changed"
            fi

            if [ "$back_check" = "true" ]; then
              echo "back changed"
              export DIRECTORY_CHOICE=primary
            else
              echo "not changed"
            fi
                    
            echo $DIRECTORY_CHOICE
            echo "-----------"

            exporter="export DIRECTORY=$DIRECTORY_CHOICE"
            echo $exporter >> $BASH_ENV
            echo "-----------"

      - run:
          name: Set Version
          command: | 
            echo "version: 2.1" >> continue-config.yml
      - run: 
          name: check envar
          command: |
            echo $DIRECTORY
            echo '-----------'
            echo ${DIRECTORY}

      - run:
          name: Create Config
          command: |
            circleci config pack .circleci/primary >> continue-config.yml
      - run: cat continue-config.yml
      - run:
          name: Validate Config
          command: |
            circleci config validate continue-config.yml
      - run:
          name: Set resource class setting
          command: |
            import json

            branch = '<< pipeline.git.branch >>'
            param_path = '/tmp/pipeline-parameters.json'
            with open(param_path, 'r') as param_file:
              params = json.load(param_file)
            if branch == 'main':
              resource_size = 'large'
            else:
              resource_size = 'small'
            params.update({'default-resource-class': resource_size, 'resource_size': 'small', 'last_one': 'test'})
            with open(param_path, 'w') as fp: 
                fp.write(json.dumps(params))
          shell: /usr/bin/env python3
      - run: cat /tmp/pipeline-parameters.json

      - continuation/continue:
          configuration_path: ./continue-config.yml

workflows:
  setup-workflow:
    jobs:
      - run_some_checks
      - prepare_for_next:
          requires:
            - run_some_checks
